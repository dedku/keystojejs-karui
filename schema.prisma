// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Blog {
  id                   String  @id @default(cuid())
  title                String  @default("")
  cardAvatar_filesize  Int?
  cardAvatar_extension String?
  cardAvatar_width     Int?
  cardAvatar_height    Int?
  cardAvatar_mode      String?
  cardAvatar_id        String?
  coverPhoto_filesize  Int?
  coverPhoto_extension String?
  coverPhoto_width     Int?
  coverPhoto_height    Int?
  coverPhoto_mode      String?
  coverPhoto_id        String?
  status               String? @default("draft")
  content              Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author               User?   @relation("Blog_author", fields: [authorId], references: [id])
  authorId             String? @map("author")
  tags                 Tag[]   @relation("Blog_tags")

  @@index([authorId])
}

model Build {
  id       String  @id @default(cuid())
  title    String  @default("")
  class    Class?  @relation("Build_class", fields: [classId], references: [id])
  classId  String? @map("class")
  skill    String  @default("")
  patch    String  @default("")
  status   String? @default("draft")
  content  Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Build_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Build_tags")

  @@index([classId])
  @@index([authorId])
}

model User {
  id       String  @id @default(cuid())
  name     String  @default("")
  email    String  @unique @default("")
  isAdmin  Boolean @default(false)
  password String
  blogs    Blog[]  @relation("Blog_author")
  builds   Build[] @relation("Build_author")
}

model Tag {
  id     String  @id @default(cuid())
  name   String  @default("")
  color  String  @default("")
  blogs  Blog[]  @relation("Blog_tags")
  builds Build[] @relation("Build_tags")
}

model Class {
  id              String  @id @default(cuid())
  name            String  @default("")
  image_filesize  Int?
  image_extension String?
  image_width     Int?
  image_height    Int?
  image_mode      String?
  image_id        String?
  builds          Build[] @relation("Build_class")
}

model Post {
  id       String @id @default(cuid())
  name     String @default("")
  icon     String @default("")
  subtitle String @default("")
}